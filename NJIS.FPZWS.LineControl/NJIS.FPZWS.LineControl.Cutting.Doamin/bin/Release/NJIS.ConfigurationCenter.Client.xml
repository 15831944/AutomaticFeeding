<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NJIS.ConfigurationCenter.Client</name>
    </assembly>
    <members>
        <member name="T:NJIS.ConfigurationCenter.Client.Common.AutoOffline">
            <summary>
            监听主线程是否已经退出
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.Common.CommunicationTypeEnum">
            <summary>
            这里面有另外一个地方要维护
            Server得也有一份动作表
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication">
            <summary>
            配置中心通讯类
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.NjTcpClient_Reconnect(System.Object,System.EventArgs)">
            <summary>
            重新连接 重新发送监听
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.Changed">
            <summary>
            远程配置更改
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.Get(System.String,System.Int32,NJIS.ConfigurationCenter.Client.ConfigType)">
            <summary>
            获取配置
            </summary>
            <param name="configAddress"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.GetAllApplicationConfigAddress(System.String,System.Int32)">
            <summary>
            获取所有叶子配置路径
            </summary>
            <param name="applicationName"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.Monitor(System.String,System.Int32)">
            <summary>
            监控
            </summary>
            <param name="configAddress"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.ChangedTrigger(System.String)">
            <summary>
            远程配置更改触发
            </summary>
            <param name="configJsonString"></param>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.GetRemoteConfigCenterTcpUrl(System.String,System.Int32)">
            <summary>
            获取远程配置中心地址
            </summary>
            <param name="applicationName"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.GetConfigVersion(System.String,System.Int32)">
            <summary>
            通过Application名称获取远程配置中心Tcp地址
            </summary>
            <param name="configAddress"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.MonitorAllAgain">
            <summary>
            全部重新监听
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.ConfigurationCenterCommunication.RequestAllAgain">
            <summary>
            全部重新请求数据 只包括需要监听的配置链接
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.Common.ChangeHandler">
            <summary>
            配置中心通讯接口
            </summary>
        </member>
        <member name="E:NJIS.ConfigurationCenter.Client.Common.IConfigurationCenterCommunication.Changed">
            <summary>
            配置中心配置更改
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IConfigurationCenterCommunication.Monitor(System.String,System.Int32)">
            <summary>
            配置监听
            </summary>
            <param name="configAddress">配置路径</param>
            <param name="timeout">超时时间</param>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IConfigurationCenterCommunication.Get(System.String,System.Int32,NJIS.ConfigurationCenter.Client.ConfigType)">
            <summary>
            堵塞式 配置获取       
            </summary>
            <param name="configAddress">配置地址</param>
            <param name="timeOut">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IConfigurationCenterCommunication.GetAllApplicationConfigAddress(System.String,System.Int32)">
            <summary>
            获取当前应用下面的所有配置路径
            </summary>
            <param name="applicationName"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IConfigurationCenterCommunication.GetRemoteConfigCenterTcpUrl(System.String,System.Int32)">
            <summary>
            通过Application名称获取远程配置中心Tcp地址
            </summary>
            <param name="applicationName"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IConfigurationCenterCommunication.GetConfigVersion(System.String,System.Int32)">
            <summary>
            通过配置路径获取当前配置的版本号
            </summary>
            <param name="configAddress"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.Common.TaskHandler">
            <summary>
            轮询线程 只有一个线程运行 其他只是作为任务进来执行
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.Exists(System.String)">
            <summary>
            判断文件是否存在
            </summary>
            <param name="fileName">文件路径</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.CreateDir(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="dirName">文件夹名</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.CreateFile(System.String)">
            <summary>
            创建文件
            </summary>
            <param name="fileName">文件名</param>
            <returns>创建失败返回false</returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.Read(System.String)">
            <summary>
            读文件内容,转化为字符类型
            </summary>
            <param name="fileName">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.FileRead(System.String)">
            <summary>
            文件转化为Char[]数组
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.ReadFile(System.String)">
            <summary>
            文件转化为byte[]
            </summary>
            <param name="fileName">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.WriteFile(System.Byte[],System.String)">
            <summary>
            将byte写入文件
            </summary>
            <param name="pReadByte">字节流</param>
            <param name="fileName">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.Write(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="fileName">文件名</param>
            <param name="content">文件内容</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.WriteLine(System.String,System.String)">
            <summary>
            写入一行
            </summary>
            <param name="fileName">文件名</param>
            <param name="content">内容</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.CopyDir(System.IO.DirectoryInfo,System.String)">
            <summary>
            复制目录
            </summary>
            <param name="fromDir">被复制的目录</param>
            <param name="toDir">复制到的目录</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.CopyDir(System.String,System.String)">
            <summary>
            复制目录
            </summary>
            <param name="fromDir">被复制的目录</param>
            <param name="toDir">复制到的目录</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.CopyDir(System.IO.DirectoryInfo,System.String,System.String)">
            <summary>
            复制目录
            </summary>
            <param name="fromDir">被复制的目录</param>
            <param name="toDir">复制到的目录</param>
            <param name="rootDir">被复制的根目录</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="fileName">文件的完整路径</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.DeleteDir(System.String,System.Boolean)">
            <summary>
            删除目录
            </summary>
            <param name="dir">指定目录</param>
            <param name="onlyDir">是否只删除目录</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.FindFile(System.String,System.String)">
            <summary>
            在指定的目录中查找文件
            </summary>
            <param name="dir">目录</param>
            <param name="fileName">文件名</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.FindFile(System.IO.DirectoryInfo,System.String)">
            <summary>
            返回文件是否存在
            </summary>
            <param name="dir"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.FolderName(System.String)">
            <summary>
            获取指定文件夹中的所有文件夹名称
            </summary>
            <param name="folderPath">路径</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.IoHelper.FileName(System.String)">
            <summary>
            获取指定文件夹中的文件名称
            </summary>
            <param name="folderPath">路径</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.JsonHelper.JsonSerialize(System.Object)">
            <summary>
            json 序列化
            </summary>
            <returns></returns>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.Common.LocalConfig">
            <summary>
            本地配置服务 这个专属给配置中心使用
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.Log.WriteLogs(NJIS.ConfigurationCenter.Client.Common.Log.LogType,System.String)">
            <summary>
            日志部分
            </summary>
            <param name="type">日志类型</param>
            <param name="content">呢哦荣</param>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.NjTcpClient.RequestSync(Hik.Communication.Scs.Communication.Messages.ScsTextMessage,System.Int32)">
            <summary>
            同步请求
            </summary>
            <param name="textMessage">请求数据</param>
            <param name="timeOut">超时</param>
            <returns>回馈数据</returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.NjTcpClient.AutoConnect">
            <summary>
            自动连接
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.Common.NjTcpClient.ReceviceHandle(System.Object,Hik.Communication.Scs.Communication.Messages.MessageEventArgs)">
            <summary>
            处理接收数据
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <!-- 对于成员“T:NJIS.ConfigurationCenter.Client.ConfigsBase`1”忽略有格式错误的 XML 注释 -->
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigsBase`1.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigsBase`1.Address">
            <summary>
            ConfigBase配置的地址属于硬编码  当configbase中的configaddress为空的时候，会检索该字段
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigsBase`1.ConfigAddress">
            <summary>
            配置路径
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigsBase`1.Current">
            <summary>
            单例
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.IgnoreAutoUpdateAttribute">
            <summary>
            跳过自动更新
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ConfigBase`1">
            <summary>
            实现配置单例
            </summary>
            <typeparam name="T"></typeparam>     
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigBase`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigBase`1.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigBase`1.Current">
            <summary>
            单例对象
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigBase`1.Address">
            <summary>
            ConfigBase配置的地址属于硬编码  当configbase中的configaddress为空的时候，会检索该字段
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigBase`1.ConfigAddress">
            <summary>
            配置路径
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ConfigCenterAttribute">
            <summary>
            继承ConfigBase 必须使用该特性
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigCenterAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            区分本地还是远程配置
            </summary>
            <param name="configAddress">配置路径</param>
            <param name="isLocal">是否本地配置 true: configAddress:写成配置文件路径地址</param>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigCenterAttribute.IsLocal">
            <summary>
            是否为本地配置
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigCenterAttribute.ConfigAddress">
            <summary>
            配置路径
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigCenterAttribute.TimeOut">
            <summary>
            请求超时
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigCenterAttribute.IsSave">
            <summary>
            是否持久化
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.ConfigCenterAttribute.IsMonitor">
            <summary>
            是否监听
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ILog">
            <summary>
            日志接口
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.Config">
            <summary>
            配置集合
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.Config.ConfigItems">
            <summary>
            配置细化项目集合
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.Config.ConfigFullAddress">
            <summary>
            配置路径
            </summary>
        </member>
        <member name="P:NJIS.ConfigurationCenter.Client.Config.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ConfigToObejctHelper">
            <summary>
            配置转为对象
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigToObejctHelper.ToObject``1(NJIS.ConfigurationCenter.Client.Config,``0,System.Collections.Generic.List{System.String})">
            <summary>
            根据给定的实例去设置属性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="config"></param>
            <param name="obj"></param>
            <param name="ignoreAutoUpdate">哪些字段要跳过更新</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:NJIS.ConfigurationCenter.Client.ConfigToObejctHelper.ToObject``1(System.Collections.Generic.List{NJIS.ConfigurationCenter.Client.Config},``0,System.Collections.Generic.List{System.String})”忽略有格式错误的 XML 注释 -->
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigToObejctHelper.ConvertHelper(System.String,System.Object)">
            <summary>
            类型转换辅助类
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ILocalConfig">
            <summary>
            本地配置接口
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ILocalConfig.Get``1(System.String)">
            <summary>
            获取本地配置
            return   item1:configAddress item2:version item3:配置对象
            </summary>
            <param name="configAddress"></param>
            <returns>item1:configAddress item2:version item3:配置对象 </returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ILocalConfig.Get(System.String)">
            <summary>
            获取本地配置
            return   item1:configAddress item2:version item3:配置对象
            </summary>
            <param name="configAddress"></param>
            <returns>item1:configAddress item2:version item3:配置对象 </returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ILocalConfig.Save``1(System.String,System.String,``0)">
            <summary>
            保存本地配置
            </summary>
            <param name="configAddress">配置路径</param>
            <param name="version">配置版本</param>
            <param name="configObject">配置对象</param>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ChangedHandler">
            <summary>
            远程配置更改委托
            </summary>
            <param name="configAddress">配置地址</param>
            <param name="version">当前配置版本</param>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ConfigEntry">
            <summary>
            配置获取入口
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigEntry.TIME_OUT">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigEntry._configVersion">
            <summary>
            配置版本管理
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigEntry._monitorConfigs">
            <summary>
            监听配置
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigEntry._lockObject">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="E:NJIS.ConfigurationCenter.Client.ConfigEntry.Changed">
            <summary>
            远程配置更改回掉事件
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigEntry.ConfigurationCommunication_Changed(System.Object,System.String)">
            <summary>
            远程配置更新
            </summary>
            <param name="sender"></param>
            <param name="version"></param>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigEntry.Get``1(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            获取配置  只能获取一个配置节点
            获取不到远程配置，就寻找本地配置
            这里会默认调用Setup.Start 但是程序退出一定要调用 Setup.Stop
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configAddress"></param>
            <param name="timeOut">请求超时</param>
            <param name="isSave">是否需要持久化</param>
            <param name="isMonitor">是否监听</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigEntry.Get(System.Type,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            获取配置  只能获取一个配置节点
            获取不到远程配置，就寻找本地配置
            这里会默认调用Setup.Start 但是程序退出一定要调用 Setup.Stop
            </summary>
            <param name="configObjectType">配置实例对象Type</param>
            <param name="configAddress"></param>
            <param name="timeOut">请求超时</param>
            <param name="isSave">是否需要持久化</param>
            <param name="isMonitor">是否监听</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigEntry.Get(System.String,System.Int32,NJIS.ConfigurationCenter.Client.ConfigType,System.Boolean,System.Boolean)">
            <summary>
            获取配置  
            获取不到远程配置，就寻找本地配置
            这里会默认调用Setup.Start 但是程序退出一定要调用 Setup.Stop
            </summary>
            <param name="configAddress">配置路径</param>
            <param name="timeOut">请求超时</param>
            <param name="isSave">是否需要持久化</param>
            <param name="isMonitor">是否监听</param>
            <param name="getConfigType">配置类型</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigEntry.GetAllApplicationConfigAddress(System.String,System.Int32)">
            <summary>
            获取应用下面的所有配置地址
            黄页
            这里会默认调用Setup.Start 但是程序退出一定要调用 Setup.Stop
            </summary>
            <param name="applicationName">应用名称</param>
            <param name="timeOut">请求超时</param>
            <returns></returns>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigEntry.ConfigMonitor(System.String,System.Int32)">
            <summary>
            配置监控
            这里会默认调用Setup.Start 但是程序退出一定要调用 Setup.Stop
            </summary>
            <param name="configAddress">配置路径</param>
            <param name="timeout">超时时间</param>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigEntry.GetRemoteTcpUrl">
            <summary>
            获取远程配置中心Tcp链接
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ConfigType">
            <summary>
            获取类型类型
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigType.One">
            <summary>
            只获取一个配置
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigType.Son">
            <summary>
            获取所有直接子节点 当使用这个类型 monitor无作用
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigType.All">
            <summary>
            获取所有子节点 当使用这个类型 monitor无作用
            </summary>
        </member>
        <member name="T:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter">
            <summary>
            配置中心启动器
            不一定需要调用Start()
            但是一定要调用Stop()
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter.NjTcpClient">
            <summary>
            socket
            </summary>
        </member>
        <member name="F:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter.LocalConfig">
            <summary>
            本地配置获取方式 参与远程配置
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter.SetLog(NJIS.ConfigurationCenter.Client.ILog)">
            <summary>
            日志记录
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter.SetLocalCofig(NJIS.ConfigurationCenter.Client.ILocalConfig)">
            <summary>
            修改本地配置获取方式
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter.Start(System.String,System.Int32)">
            <summary>
            连接远程服务
            </summary>
            <param name="serviceUrl">服务器地址</param>
            <param name="port">端口号</param>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter.Start">
            <summary>
            连接远程服务
            
            AppSettings:
                ConfigServerIpAddress:string
                ConfigServerPort:int
            </summary>
        </member>
        <member name="M:NJIS.ConfigurationCenter.Client.ConfigurationCenterStarter.Stop">
            <summary>
            断开连接
            </summary>
        </member>
    </members>
</doc>
